// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "malariasimulation_types.h"
#include <Rcpp.h>

using namespace Rcpp;

// create_egg_laying_process_cpp
Rcpp::XPtr<process_t> create_egg_laying_process_cpp(std::string mosquito, std::string susceptable, std::string infected, std::string unborn, std::string early_larval_stage, std::string larval_growth_event);
RcppExport SEXP _malariasimulation_create_egg_laying_process_cpp(SEXP mosquitoSEXP, SEXP susceptableSEXP, SEXP infectedSEXP, SEXP unbornSEXP, SEXP early_larval_stageSEXP, SEXP larval_growth_eventSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type mosquito(mosquitoSEXP);
    Rcpp::traits::input_parameter< std::string >::type susceptable(susceptableSEXP);
    Rcpp::traits::input_parameter< std::string >::type infected(infectedSEXP);
    Rcpp::traits::input_parameter< std::string >::type unborn(unbornSEXP);
    Rcpp::traits::input_parameter< std::string >::type early_larval_stage(early_larval_stageSEXP);
    Rcpp::traits::input_parameter< std::string >::type larval_growth_event(larval_growth_eventSEXP);
    rcpp_result_gen = Rcpp::wrap(create_egg_laying_process_cpp(mosquito, susceptable, infected, unborn, early_larval_stage, larval_growth_event));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_malariasimulation_create_egg_laying_process_cpp", (DL_FUNC) &_malariasimulation_create_egg_laying_process_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_malariasimulation(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
